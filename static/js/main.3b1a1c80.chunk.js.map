{"version":3,"sources":["data/flickr_nyc.csv","data/flickr_sf.csv","components/constant.js","components/Map.js","store/statusSlicer.js","components/Banner.js","store/dataSlicer.js","components/Scatterplot.js","components/PulseChart.js","App.js","store/index.js","index.js"],"names":["TIME_RANGE_MAPPING","HOUR","min","max","DAYOFWEEK","MONTH","INITIAL_LOCATION","nyc","longtitude","latitude","sf","MODE_MAPPING","DATETYPE_MAPPING","FEATURE_YRANGE_MAPPING","range","tickvals","Map","location","scalarData","status","useSelector","state","highLightList","data","scatterData","mode","filter","_","i","includes","INITIAL_VIEW_STATE","longitude","zoom","layers","HeatmapLayer","id","d","unixTimestamp","dateType","date","Date","getHours","getDay","getMonth","getTime","type","getPosition","radiusPixels","colorRange","ScatterplotLayer","pickable","stroked","filled","radiusScale","radiusMinPixels","radiusMaxPixels","lineWidthMinPixels","latLng","getFillColor","initialViewState","controller","reuseMaps","mapboxApiAccessToken","mapStyle","preventStyleDiffing","statusSlice","createSlice","name","initialState","reducers","setMode","action","payload","setType","setDate","actions","sliderMarks","Array","keys","Banner","dispatch","useDispatch","useState","sliderDate","setSliderDate","Stack","direction","alignItems","spacing","Slider","color","track","size","value","onChange","v","onChangeCommitted","handleDateChange","step","marks","map","label","ToggleButtonGroup","sx","width","fullWidth","exclusive","newType","ToggleButton","dataSlicer","feature_nyc","features","key","feature_sf","length","nycHighlight","sfHighlight","setHighlight","Scatterplot","nycData","sfData","buildData","reduce","acc","cur","fnRank","resolutions","maxRank","sigRank","x","Math","sqrt","y","rank","push","nycRank","sfRank","marker","layout","height","dragmode","showlegend","hovermode","margin","l","r","b","t","config","scrollZoom","displayModeBar","uirevision","displaylogo","modeBarButtonsToRemove","onSelected","points","forEach","pointIndex","onSelectedHandler","onDeselect","getBeatTypes","beats","maxTime","sigMaxTime","PulseChart","sort","a","lineFigure","staticPlot","xaxis","showgrid","showticklabels","zeroline","yaxis","circleFigure","Fragment","scalars","line","useResizeHandler","style","fill","colorscale","createChart","nycScalarData","sfScalarData","App","isCSVLoading","setIsCSVLoading","useEffect","Promise","all","d3","nycCSV","Longtitude","Latitude","Time","sfCSV","then","files","className","configureStore","reducer","theme","createTheme","palette","primary","main","secondary","ReactDOM","render","store","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3b1a1c80.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/flickr_nyc.ff3f84ce.csv\";","export default __webpack_public_path__ + \"static/media/flickr_sf.2ec1ec47.csv\";","export const MAP_STYLE = 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json'\r\nexport const MAPBOX_TOKEN = \"pk.eyJ1Ijoic2w5MjAiLCJhIjoiY2txcXhrNWJ1MDNtbjJwbnFud3JwZG9yYyJ9.uA0W5mcPNfvnW9LXC_DQ6A\"\r\n\r\nexport const TIME_RANGE_MAPPING = {\r\n  HOUR: { min: 0, max: 23 },\r\n  DAYOFWEEK: { min: 0, max: 6 },\r\n  MONTH: { min: 0, max: 11 }\r\n}\r\n\r\nexport const INITIAL_LOCATION = {\r\n  nyc: { longtitude: -73.97963, latitude: 40.730519 },\r\n  sf: { longtitude: -122.43430, latitude: 37.79245 }\r\n}\r\n\r\nexport const MODE_MAPPING = {\r\n  NORMAL: 'normal',\r\n  SELECT: 'select'\r\n}\r\n\r\nexport const DATETYPE_MAPPING = {\r\n  HOUR: 'HOUR',\r\n  DOW: \"DAYOFWEEK\",\r\n  MONTH: \"MONTH\"\r\n}\r\n\r\nexport const FEATURE_YRANGE_MAPPING = {\r\n  HOUR: {range: [0, 1200], tickvals: [0, 500, 1000]},\r\n  DAYOFWEEK: {range: [0, 3200], tickvals: [1000, 2000, 3000]},\r\n  MONTH: {range: [0, 2200], tickvals:  [1000, 2000, 3000]}\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { StaticMap } from 'react-map-gl';\r\nimport DeckGL from '@deck.gl/react';\r\nimport { HeatmapLayer } from '@deck.gl/aggregation-layers';\r\nimport { ScatterplotLayer } from '@deck.gl/layers';\r\nimport { MAP_STYLE, MAPBOX_TOKEN, INITIAL_LOCATION, DATETYPE_MAPPING } from './constant'\r\n\r\n\r\nconst getTime = (unixTimestamp, dateType) => {\r\n  const date = new Date(unixTimestamp * 1000)\r\n  switch (dateType) {\r\n    case DATETYPE_MAPPING.HOUR:\r\n      return date.getHours()\r\n    case DATETYPE_MAPPING.DOW:\r\n      return date.getDay()\r\n    case DATETYPE_MAPPING.MONTH:\r\n      return date.getMonth()\r\n  }\r\n}\r\n\r\nconst Map = ({ location, scalarData }) => {\r\n  const status = useSelector(state => state.status)\r\n  const highLightList = useSelector(state => state.data[location + 'Highlight'])\r\n  const scatterData = useSelector(state => {\r\n    let data = state.data[location]\r\n    return status.mode === 'normal'\r\n      ? data\r\n      : data.filter((_, i) => highLightList.includes(i))\r\n  })\r\n\r\n  const INITIAL_VIEW_STATE = {\r\n    longitude: INITIAL_LOCATION[location].longtitude,\r\n    latitude: INITIAL_LOCATION[location].latitude,\r\n    zoom: 10,\r\n  };\r\n\r\n  const layers = [\r\n    new HeatmapLayer({\r\n      id: 'heatmp-layer',\r\n      data: scalarData.filter(d => getTime(d[2], status.type) === status.date),\r\n      getPosition: d => [d[0], d[1]],\r\n      radiusPixels: 20,\r\n      colorRange: location === 'nyc'\r\n        ? [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]]\r\n        : [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]]\r\n      // : [[239,243,255],[198,219,239],[158,202,225],[107,174,214],[49,130,189],[8,81,156]]\r\n    }),\r\n    new ScatterplotLayer({\r\n      id: 'scatterplot-layer',\r\n      data: scatterData,\r\n      pickable: true,\r\n      stroked: true,\r\n      filled: true,\r\n      radiusScale: 60,\r\n      radiusMinPixels: 2,\r\n      radiusMaxPixels: 8,\r\n      lineWidthMinPixels: 0.5,\r\n      getPosition: d => [d.latLng[0][1], d.latLng[0][0]],\r\n      getFillColor: [0, 0, 0, 0]\r\n    })\r\n  ];\r\n\r\n  return (\r\n    <DeckGL initialViewState={INITIAL_VIEW_STATE} controller={true} layers={layers}>\r\n      <StaticMap reuseMaps mapboxApiAccessToken={MAPBOX_TOKEN} mapStyle={MAP_STYLE} preventStyleDiffing={true} />\r\n    </DeckGL>\r\n  );\r\n}\r\n\r\nexport default Map","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { MODE_MAPPING, DATETYPE_MAPPING } from '../components/constant'\r\n\r\n\r\nconst statusSlice = createSlice({\r\n  name: \"status\",\r\n  initialState: {\r\n    mode: MODE_MAPPING.NORMAL,\r\n    type: DATETYPE_MAPPING.HOUR,\r\n    date: 0\r\n  },\r\n  reducers: {\r\n    setMode: (state, action) => { state.mode = action.payload },\r\n    setType: (state, action) => { state.type = action.payload },\r\n    setDate: (state, action) => { state.date = action.payload },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMode,\r\n  setType,\r\n  setDate\r\n} = statusSlice.actions\r\n\r\nexport default statusSlice.reducer","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Slider from '@mui/material/Slider';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { TIME_RANGE_MAPPING, DATETYPE_MAPPING } from './constant'\r\nimport { setType, setDate } from '../store/statusSlicer'\r\n\r\nconst sliderMarks = {\r\n  [DATETYPE_MAPPING.HOUR]: [...Array(24).keys()],\r\n  [DATETYPE_MAPPING.DOW]: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  [DATETYPE_MAPPING.MONTH]: ['Jan', 'Fen', \"Mar\", 'Apr', 'May', 'Jun', 'Jul', 'Aug', \"Sep\", \"Oct\", 'Nov', 'Dec']\r\n}\r\n\r\nconst Banner = () => {\r\n  const dispatch = useDispatch()\r\n  const dateType = useSelector(state => state.status.type)\r\n  const date = useSelector(state => state.status.date)\r\n  const [sliderDate, setSliderDate] = useState(date)\r\n\r\n  const handleDateChange = sliderDate => {\r\n    dispatch(setDate(sliderDate))\r\n  }\r\n\r\n  const handleTimeFormatChange = newType => {\r\n    if (newType === dateType || newType === null) return\r\n    dispatch(setDate(0))\r\n    setSliderDate(0)\r\n    dispatch(setType(newType))\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"baseline\"\r\n      spacing={4}\r\n    >\r\n      <Slider\r\n        color=\"primary\"\r\n        track={false}\r\n        size={'small'}\r\n        value={sliderDate}\r\n        onChange={(_, v) => setSliderDate(v)}\r\n        onChangeCommitted={(_, v) => handleDateChange(v)}\r\n        step={1}\r\n        marks={sliderMarks[dateType].map((d, i)=>({value: i, label: d}))}\r\n        min={TIME_RANGE_MAPPING[dateType].min}\r\n        max={TIME_RANGE_MAPPING[dateType].max}\r\n      />\r\n      <ToggleButtonGroup\r\n        sx={{ width: '500px' }}\r\n        fullWidth={true}\r\n        exclusive\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        value={dateType}\r\n        onChange={(_, v) => handleTimeFormatChange(v)}\r\n      >\r\n        <ToggleButton value=\"HOUR\">Hour</ToggleButton>\r\n        <ToggleButton value=\"DAYOFWEEK\">Day of Week</ToggleButton>\r\n        <ToggleButton value=\"MONTH\">Month</ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Banner","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport feature_nyc from '../data/feature_nyc.json'\r\nimport feature_sf from '../data/feature_sf.json'\r\n\r\nconst dataSlicer = createSlice({\r\n  name: \"data\",\r\n  initialState: {\r\n    nyc: feature_nyc.features.map((d, i) => ({ ...d, location: 'nyc', key: i})),\r\n    sf: feature_sf.features.map((d, i) => ({ ...d, location: 'sf', key: i + feature_nyc.features.length})),\r\n    nycHighlight: [],\r\n    sfHighlight: [],\r\n    // singleHighlight: -1,\r\n  },\r\n  reducers: {\r\n    setHighlight: (state, action) => {\r\n      state.nycHighlight = action.payload.nycHighlight\r\n      state.sfHighlight = action.payload.sfHighlight\r\n    },\r\n    // setSingleHighlight: (state, action) => { state.singleHighlight = action.payload }\r\n  },\r\n});\r\n\r\nexport const {\r\n  setHighlight,\r\n  // setSingleHighlight\r\n} = dataSlicer.actions\r\n\r\nexport default dataSlicer.reducer","import React from 'react'\r\nimport Plot from 'react-plotly.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { MODE_MAPPING } from './constant';\r\nimport { setMode } from '../store/statusSlicer'\r\nimport { setHighlight } from '../store/dataSlicer'\r\n\r\n\r\nconst Scatterplot = () => {\r\n  const dispatch = useDispatch()\r\n  const dateType = useSelector(state => state.status.type)\r\n  const nycData = useSelector(state => state.data.nyc)\r\n  const sfData = useSelector(state => state.data.sf)\r\n\r\n  const buildData = data => data.reduce((acc, cur) => {\r\n    let fnRank = cur.resolutions[dateType].fnRank;\r\n    let maxRank = cur.resolutions[dateType].maxRank;\r\n    let sigRank = cur.resolutions[dateType].sigRank;\r\n    let x = Math.sqrt(maxRank * maxRank + fnRank * fnRank + sigRank * sigRank);\r\n    let y = cur.rank;\r\n    acc.x.push(x)\r\n    acc.y.push(y)\r\n    return acc\r\n  }, { x: [], y: [] })\r\n\r\n  let nycRank = buildData(nycData)\r\n  let sfRank = buildData(sfData)\r\n\r\n  const data = [{\r\n    ...nycRank,\r\n    name: \"nyc\",\r\n    type: 'scatter',\r\n    mode: 'markers',\r\n    marker: { color: 'red' },\r\n  }, {\r\n    ...sfRank,\r\n    name: \"sf\",\r\n    type: 'scatter',\r\n    mode: 'markers',\r\n    marker: { color: 'blue' },\r\n  }]\r\n\r\n  const config = {\r\n    scrollZoom: true,\r\n    displayModeBar: true,\r\n    uirevision: true,\r\n    displaylogo: false,\r\n    modeBarButtonsToRemove: ['zoomIn', 'zoomOut', 'autoScale']\r\n  }\r\n\r\n  const layout = {\r\n    width: '300',\r\n    height: '250',\r\n    dragmode: 'select',\r\n    showlegend: false,\r\n    hovermode: false,\r\n    margin: { l: 20, r: 10, b: 20, t: 20, }\r\n  }\r\n\r\n  const onSelectedHandler = data => {\r\n    if(!data) return\r\n    let nycHighlight = []\r\n    let sfHighlight = []\r\n\r\n    data.points.forEach(d => {\r\n      d.data.name === 'nyc'\r\n        ? nycHighlight.push(d.pointIndex)\r\n        : sfHighlight.push(d.pointIndex)\r\n    })\r\n    dispatch(setHighlight({ nycHighlight, sfHighlight }))\r\n    dispatch(setMode(MODE_MAPPING.SELECT))\r\n  }\r\n\r\n  const onDeselectHandler = () => {\r\n    dispatch(setMode(MODE_MAPPING.NORMAL))\r\n    dispatch(setHighlight({ nycHighlight: [], sfHighlight: [] }))\r\n  }\r\n  return (\r\n    <Plot\r\n      data={data}\r\n      layout={layout}\r\n      config={config}\r\n      onSelected={data => onSelectedHandler(data)}\r\n      onDeselect={() => onDeselectHandler()}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Scatterplot","import React from 'react'\r\nimport Plot from 'react-plotly.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// import { setSingleHighlight } from '../store/dataSlicer'\r\nimport { MODE_MAPPING, FEATURE_YRANGE_MAPPING } from './constant'\r\n\r\nconst getBeatTypes = (d, dateType) => {\r\n  var beats = [];\r\n  var maxTime = d.resolutions[dateType][\"maxTime\"];\r\n  var sigMaxTime = d.resolutions[dateType][\"sigMaxTime\"];\r\n  for(var i=0; i<maxTime.length; i++) {\r\n      var b = (maxTime[i]?(sigMaxTime[i]?0:1):2);\r\n      beats.push(b);\r\n  }\r\n  return beats;\r\n}\r\n\r\nconst PulseChart = () => {\r\n  const dispatch = useDispatch()\r\n  const mode = useSelector(state => state.status.mode)\r\n  const dateType = useSelector(state => state.status.type)\r\n  const nyc = useSelector(state => state.data.nyc)\r\n  const sf = useSelector(state => state.data.sf)\r\n  const nycHighlight = useSelector(state => state.data.nycHighlight)\r\n  const sfHighlight = useSelector(state => state.data.sfHighlight)\r\n  var data = []\r\n\r\n  if (mode === MODE_MAPPING.SELECT) {\r\n    let nycData = nycHighlight.map(d => nyc[d])\r\n    let sfData = sfHighlight.map(d => sf[d])\r\n    data = [...nycData, ...sfData]\r\n  } else {\r\n    data = [...nyc, ...sf]\r\n  }\r\n  data.sort((a, b) => b.rank - a.rank)\r\n\r\n  \r\n  const lineFigure = {\r\n    config: {\r\n      uirevision: true,\r\n      staticPlot: true,\r\n      displayModeBar: false,\r\n    },\r\n    layout: {\r\n      margin: { l: 40, r: 40, b: 10, t: 10 },\r\n      xaxis: {\r\n        showgrid: false,\r\n        showticklabels: false,\r\n        zeroline: false,\r\n      },\r\n      yaxis: {\r\n        ...FEATURE_YRANGE_MAPPING[dateType]\r\n      }\r\n    }\r\n  }\r\n  const circleFigure = {\r\n    config: {\r\n      uirevision: true,\r\n      staticPlot: true,\r\n      displayModeBar: false,\r\n    },\r\n    layout: {\r\n      margin: { l: 0, r: 0, b: 0, t: 0 },\r\n      xaxis: {\r\n        showgrid: false,\r\n        showticklabels: false,\r\n        zeroline: false,\r\n      },\r\n      yaxis: {\r\n        showgrid: false,\r\n        showticklabels: false,\r\n        zeroline: false,\r\n      }\r\n    }\r\n  }\r\n  const createChart = (d, i) => {\r\n    return (\r\n      <div key={i} \r\n        // onMouseEnter={() => dispatch(setSingleHighlight(d.key))} \r\n        // onMouseLeave={() => dispatch(setSingleHighlight(-1))}\r\n      >\r\n        <Plot\r\n          data={[{\r\n            y: d.resolutions[dateType].scalars,\r\n            mode: 'lines',\r\n            line: {\r\n              color: d.location === 'nyc' ? \"red\" : \"blue\"\r\n            }\r\n          }]}\r\n          config={lineFigure.config}\r\n          layout={lineFigure.layout}\r\n          useResizeHandler={true}\r\n          style ={{width: \"100%\", height: \"80px\"}}\r\n        /> \r\n        <Plot\r\n          data={[{\r\n            y: Array(d.resolutions[dateType].scalars.length).fill(1),\r\n            mode: 'markers',\r\n            type: 'scatter',\r\n            marker: {\r\n              size: 12,\r\n              color: getBeatTypes(d, dateType),\r\n              colorscale: 'Greens',\r\n              line: { width: 1 }\r\n            }\r\n          }]}\r\n          config={circleFigure.config}\r\n          layout={circleFigure.layout}\r\n          useResizeHandler={true}\r\n          style ={{width: \"100%\", height: \"20px\"}}\r\n        />\r\n      </div>\r\n\r\n    )\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      {\r\n        data.map((d, i) => {\r\n          return createChart(d, i)\r\n        })\r\n      }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PulseChart","import React, { useEffect, useState } from 'react'\nimport * as d3 from 'd3'\nimport './App.css'\n\nimport nycCSV from './data/flickr_nyc.csv'\nimport sfCSV from './data/flickr_sf.csv'\nimport Map from './components/Map'\nimport Banner from './components/Banner'\nimport Scatterplot from './components/Scatterplot';\nimport PulseChart from './components/PulseChart';\n\n\nvar nycScalarData = []\nvar sfScalarData = []\n\nfunction App() {\n  const [isCSVLoading, setIsCSVLoading] = useState(true)\n  useEffect(() => {\n    Promise.all([\n      d3.csv(nycCSV, d => [+d.Longtitude, +d.Latitude, +d.Time]),\n      d3.csv(sfCSV, d => [+d.Longtitude, +d.Latitude, +d.Time])\n    ]).then(files => {\n      nycScalarData = files[0]\n      sfScalarData = files[1]\n      setIsCSVLoading(false)\n    })\n  }, [])\n\n  return (\n    !isCSVLoading &&\n    <div className=\"App\">\n      <div className='banner_container'>\n        <Banner />\n      </div>\n      <div className='map_container map_container_1'>\n        <Map location='nyc' scalarData={nycScalarData} />\n      </div>\n      <div className='map_container map_container_2'>\n        <Map location='sf' scalarData={sfScalarData} />\n      </div>\n      <div className='scatter_container scatter_container_1'>\n        <Scatterplot />\n      </div>\n      <div className='scatter_container scatter_container_2'>\n\n      </div>\n      <div className=\"pulsechart_container\">\n        <PulseChart />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport dataSlicer from \"./dataSlicer\";\r\nimport statusSlice from \"./statusSlicer\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    data: dataSlicer,\r\n    status: statusSlice,\r\n  },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff8f00\"\n    },\n    secondary: {\n      main: \"#7e57c2\",\n    },\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}