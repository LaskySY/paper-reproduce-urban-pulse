{"version":3,"sources":["data/flickr_nyc.csv","data/flickr_sf.csv","components/constant.js","components/Map.js","store/statusSlicer.js","components/Banner.js","store/dataSlicer.js","components/Scatterplot.js","components/PulseChart.js","components/DistanceChart.js","components/Locations.js","App.js","store/index.js","index.js"],"names":["TIME_RANGE_MAPPING","HOUR","min","max","DAYOFWEEK","MONTH","INITIAL_LOCATION","nyc","longtitude","latitude","sf","MODE_MAPPING","DATETYPE_MAPPING","AXES_BY_MODE_MAPPING","scatterChart","range","pulseChart","tickvals","distanceChart","COLOR_PULSE_MAPPING","DATE_MAPPING","Array","keys","LOCATION_KEY_MAPPING","key","city","name","Map","location","scalarData","scatterData","status","useSelector","state","highLightList","data","highLightPointKey","singleHighlight","INITIAL_VIEW_STATE","longitude","zoom","layers","HeatmapLayer","id","weightsTextureSize","filter","d","unixTimestamp","dateType","date","Date","getHours","getDay","getMonth","getTime","type","getPosition","radiusPixels","colorRange","ScatterplotLayer","mode","map","i","pickable","stroked","filled","radiusScale","getLineWidth","getRadius","getLineColor","latLng","initialViewState","controller","reuseMaps","mapboxApiAccessToken","mapStyle","preventStyleDiffing","statusSlice","createSlice","initialState","reducers","setMode","action","payload","setType","setDate","actions","Banner","dispatch","useDispatch","useState","sliderDate","setSliderDate","Stack","direction","alignItems","spacing","Slider","color","track","size","value","onChange","_","v","onChangeCommitted","handleDateChange","step","marks","label","ToggleButtonGroup","sx","width","fullWidth","exclusive","newType","ToggleButton","dataSlicer","nycHighlight","sfHighlight","setHighlight","setSingleHighlight","Scatterplot","nycScatterData","sfScatterData","buildData","reduce","acc","cur","fnRank","resolutions","maxRank","sigRank","x","Math","sqrt","y","rank","push","nycRank","sfRank","singleHightlightCoordinate","opacity","marker","line","Fragment","style","textAlign","layout","height","dragmode","showlegend","hovermode","yaxis","margin","l","r","b","t","xaxis","config","scrollZoom","displayModeBar","uirevision","displaylogo","modeBarButtonsToRemove","onSelected","points","length","lastIndex","selectedpoints","onSelectedHandler","onDeselect","lineFigure","staticPlot","showgrid","showticklabels","zeroline","circleFigure","fixedrange","getBeatTypes","beats","maxTime","sigMaxTime","PulseChart","rankIndex","setRankIndex","useEffect","sort","a","flag","forEach","className","fill","customdata","hovertemplate","includes","useResizeHandler","onClick","handleClick","onMouseEnter","onMouseLeave","scalars","createChart","hoverinfo","DistanceChart","highlightIndex","highlight","hover","setHover","distanceList","keyValueList","sourceData","sourcePoint","feature1","feature2","distance","beat1","beat2","dd","sbeat1","sbeat2","fbeat1","fn","fbeat2","getDistance","onHover","curveNumber","indexOf","handleHover","onUnhover","handleUnhover","position","top","left","transform","bgcolor","border","boxShadow","p","Locations","nycScatterLength","sfScatterLength","setLocation","React","open","setOpen","handleLocationChange","newLocation","Button","fontSize","Modal","onClose","Box","Typography","component","variant","nycScalarData","sfScalarData","App","isCSVLoading","setIsCSVLoading","feature_nyc","features","feature_sf","Promise","all","d3","nycCSV","Longtitude","Latitude","Time","sfCSV","then","files","configureStore","reducer","theme","createTheme","palette","primary","main","secondary","ReactDOM","render","store","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.c197957f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/flickr_nyc.ff3f84ce.csv\";","export default __webpack_public_path__ + \"static/media/flickr_sf.2ec1ec47.csv\";","export const MAP_STYLE = 'https://basemaps.cartocdn.com/gl/positron-gl-style/style.json'\r\nexport const MAPBOX_TOKEN = \"pk.eyJ1Ijoic2w5MjAiLCJhIjoiY2txcXhrNWJ1MDNtbjJwbnFud3JwZG9yYyJ9.uA0W5mcPNfvnW9LXC_DQ6A\"\r\n\r\nexport const TIME_RANGE_MAPPING = {\r\n  HOUR: { min: 0, max: 23 },\r\n  DAYOFWEEK: { min: 0, max: 6 },\r\n  MONTH: { min: 0, max: 11 }\r\n}\r\n\r\nexport const INITIAL_LOCATION = {\r\n  nyc: { longtitude: -73.97963, latitude: 40.730519 },\r\n  sf: { longtitude: -122.43430, latitude: 37.79245 }\r\n}\r\n\r\nexport const MODE_MAPPING = {\r\n  NORMAL: 'normal',\r\n  SELECT: 'select',\r\n  LOCATION: 'location'\r\n}\r\n\r\nexport const DATETYPE_MAPPING = {\r\n  HOUR: 'HOUR',\r\n  DAYOFWEEK: \"DAYOFWEEK\",\r\n  MONTH: \"MONTH\"\r\n}\r\n\r\nexport const AXES_BY_MODE_MAPPING = {\r\n  HOUR: {\r\n    scatterChart: { range: [0, 1.6] },\r\n    pulseChart: { range: [0, 1200], tickvals: [0, 500, 1000] },\r\n    distanceChart: { range: [-0.1, 7.5], tickvals: [0, 1, 2, 3, 4, 5, 6, 7] }\r\n  },\r\n  DAYOFWEEK: {\r\n    scatterChart: { range: [0, 1.8] },\r\n    pulseChart: { range: [0, 3200], tickvals: [1000, 2000, 3000] },\r\n    distanceChart: { range: [-0.1, 4.3], tickvals: [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5] }\r\n  },\r\n  MONTH: {\r\n    scatterChart: { range: [0, 1.5] },\r\n    pulseChart: { range: [0, 2200], tickvals: [1000, 2000, 3000] },\r\n    distanceChart: { range: [-0.1, 5.3], tickvals: [0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5] }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const COLOR_PULSE_MAPPING = [\r\n  'rgb(255, 255, 255)',\r\n  'rgb(169, 223, 191)',\r\n  'rgb(25, 111, 61)',\r\n]\r\n\r\nexport const DATE_MAPPING = {\r\n  HOUR: [...Array(24).keys()],\r\n  DAYOFWEEK: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  MONTH: ['Jan', 'Fen', \"Mar\", 'Apr', 'May', 'Jun', 'Jul', 'Aug', \"Sep\", \"Oct\", 'Nov', 'Dec']\r\n}\r\n\r\nexport const LOCATION_KEY_MAPPING = {\r\n  'Rockefeller Center': { key: [2], city: 'nyc', name: 'Rockefeller Center' },\r\n  'Greenwich Village': { key: [16, 17, 25, 60, 61, 72, 81], city: 'nyc', name: 'Greenwich Village' },\r\n  'Alcatraz Island': { key: [3], city: 'sf', name: 'Alcatraz Island' },\r\n  'Western Addition': { key: [8, 19, 46, 75, 85, 88], city: 'sf', name: 'Western Addition' }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { StaticMap } from 'react-map-gl';\r\nimport DeckGL from '@deck.gl/react';\r\nimport { HeatmapLayer } from '@deck.gl/aggregation-layers';\r\nimport { ScatterplotLayer } from '@deck.gl/layers';\r\nimport { MAP_STYLE, MAPBOX_TOKEN, INITIAL_LOCATION, DATETYPE_MAPPING, MODE_MAPPING } from './constant'\r\n\r\n\r\nconst getTime = (unixTimestamp, dateType) => {\r\n  const date = new Date(unixTimestamp * 1000)\r\n  switch (dateType) {\r\n    case DATETYPE_MAPPING.HOUR:\r\n      return date.getHours()\r\n    case DATETYPE_MAPPING.DAYOFWEEK:\r\n      return date.getDay()\r\n    case DATETYPE_MAPPING.MONTH:\r\n      return date.getMonth()\r\n  }\r\n}\r\n\r\nconst Map = ({ location, scalarData, scatterData}) => {\r\n  const status = useSelector(state => state.status)\r\n  const highLightList = useSelector(state => state.data[location + 'Highlight'])\r\n  const highLightPointKey = useSelector(state=> state.data.singleHighlight)\r\n  const INITIAL_VIEW_STATE = {\r\n    longitude: INITIAL_LOCATION[location].longtitude,\r\n    latitude: INITIAL_LOCATION[location].latitude,\r\n    zoom: 10,\r\n  };\r\n\r\n  const layers = [\r\n    new HeatmapLayer({\r\n      id: 'heatmp-layer',\r\n      weightsTextureSize: 128,\r\n      data: scalarData.filter(d => getTime(d[2], status.type) === status.date),\r\n      getPosition: d => [d[0], d[1]],\r\n      radiusPixels: 25,\r\n      colorRange: location === 'nyc'\r\n        ? [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]]\r\n        : [[255, 255, 178], [254, 217, 118], [254, 178, 76], [253, 141, 60], [240, 59, 32], [189, 0, 38]]\r\n      // : [[239,243,255],[198,219,239],[158,202,225],[107,174,214],[49,130,189],[8,81,156]]\r\n    }),\r\n    new ScatterplotLayer({\r\n      id: 'scatterplot-layer',\r\n      data: status.mode != MODE_MAPPING.NORMAL \r\n        ? highLightList.map(i=>scatterData[i])\r\n        : scatterData.map(d=>d),\r\n      pickable: true,\r\n      stroked: true,\r\n      filled: false,\r\n      radiusScale: 60,\r\n      getLineWidth: d=> {\r\n        return d.key === highLightPointKey ? 120 : 40\r\n      },\r\n      getRadius: d=> {\r\n        return d.key === highLightPointKey ? 10 : 2\r\n      },\r\n      getLineColor: d=> {\r\n        return d.key === highLightPointKey \r\n          ? location === 'nyc'\r\n            ? [255, 0, 0, 255] \r\n            : [0, 0, 255, 255] \r\n          : [0, 0, 0, 255]\r\n      },\r\n      getPosition: d => d.latLng,\r\n    })\r\n  ];\r\n\r\n  return (\r\n    <DeckGL initialViewState={INITIAL_VIEW_STATE} controller={true} layers={layers}>\r\n      <StaticMap reuseMaps mapboxApiAccessToken={MAPBOX_TOKEN} mapStyle={MAP_STYLE} preventStyleDiffing={true} />\r\n    </DeckGL>\r\n  );\r\n}\r\n\r\nexport default Map","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { MODE_MAPPING, DATETYPE_MAPPING } from '../components/constant'\r\n\r\n\r\nconst statusSlice = createSlice({\r\n  name: \"status\",\r\n  initialState: {\r\n    mode: MODE_MAPPING.NORMAL,\r\n    type: DATETYPE_MAPPING.HOUR,\r\n    date: 0\r\n  },\r\n  reducers: {\r\n    setMode: (state, action) => { state.mode = action.payload },\r\n    setType: (state, action) => { state.type = action.payload },\r\n    setDate: (state, action) => { state.date = action.payload },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setMode,\r\n  setType,\r\n  setDate\r\n} = statusSlice.actions\r\n\r\nexport default statusSlice.reducer","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport ToggleButton from '@mui/material/ToggleButton';\r\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\r\nimport Slider from '@mui/material/Slider';\r\nimport Stack from '@mui/material/Stack';\r\n\r\nimport { TIME_RANGE_MAPPING, DATE_MAPPING, MODE_MAPPING } from './constant'\r\nimport { setType, setDate, setMode } from '../store/statusSlicer'\r\n\r\n\r\n\r\nconst Banner = () => {\r\n  const dispatch = useDispatch()\r\n  const mode = useSelector(state => state.status.mode)\r\n  const dateType = useSelector(state => state.status.type)\r\n  const date = useSelector(state => state.status.date)\r\n  const [sliderDate, setSliderDate] = useState(date)\r\n\r\n  const handleDateChange = sliderDate => {\r\n    dispatch(setDate(sliderDate))\r\n  }\r\n\r\n  const handleTimeFormatChange = newType => {\r\n    if (newType === dateType || newType === null) return\r\n    dispatch(setDate(0))\r\n    if(mode === MODE_MAPPING.SELECT) dispatch(setMode(MODE_MAPPING.NORMAL))\r\n    setSliderDate(0)\r\n    dispatch(setType(newType))\r\n  }\r\n\r\n  return (\r\n    <Stack\r\n      direction=\"row\"\r\n      alignItems=\"baseline\"\r\n      spacing={4}\r\n    >\r\n      <Slider\r\n        color=\"primary\"\r\n        track={false}\r\n        size={'small'}\r\n        value={sliderDate}\r\n        onChange={(_, v) => setSliderDate(v)}\r\n        onChangeCommitted={(_, v) => handleDateChange(v)}\r\n        step={1}\r\n        marks={DATE_MAPPING[dateType].map((d, i) => ({ value: i, label: d }))}\r\n        min={TIME_RANGE_MAPPING[dateType].min}\r\n        max={TIME_RANGE_MAPPING[dateType].max}\r\n      />\r\n      <ToggleButtonGroup\r\n        sx={{ width: '500px' }}\r\n        fullWidth={true}\r\n        exclusive\r\n        size=\"small\"\r\n        color=\"primary\"\r\n        value={dateType}\r\n        onChange={(_, v) => handleTimeFormatChange(v)}\r\n      >\r\n        <ToggleButton value=\"HOUR\">Hour</ToggleButton>\r\n        <ToggleButton value=\"DAYOFWEEK\">Day of Week</ToggleButton>\r\n        <ToggleButton value=\"MONTH\">Month</ToggleButton>\r\n      </ToggleButtonGroup>\r\n\r\n    </Stack>\r\n  )\r\n}\r\n\r\nexport default Banner","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst dataSlicer = createSlice({\r\n  name: \"data\",\r\n  initialState: {\r\n    nycHighlight: [],\r\n    sfHighlight: [],\r\n    singleHighlight: -1,\r\n  },\r\n  reducers: {\r\n    setHighlight: (state, action) => {\r\n      state.nycHighlight = action.payload.nycHighlight\r\n      state.sfHighlight = action.payload.sfHighlight\r\n    },\r\n    setSingleHighlight: (state, action) => { state.singleHighlight = action.payload }\r\n  },\r\n});\r\n\r\nexport const {\r\n  setHighlight,\r\n  setSingleHighlight\r\n} = dataSlicer.actions\r\n\r\nexport default dataSlicer.reducer","import React from 'react'\r\nimport Plot from 'react-plotly.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { MODE_MAPPING, AXES_BY_MODE_MAPPING } from './constant';\r\nimport { setMode } from '../store/statusSlicer'\r\nimport { setHighlight } from '../store/dataSlicer'\r\n\r\n\r\nconst Scatterplot = ({ nycScatterData, sfScatterData }) => {\r\n  const dispatch = useDispatch()\r\n  const mode = useSelector(state=> state.status.mode)\r\n  const dateType = useSelector(state => state.status.type)\r\n  const highLightPointKey = useSelector(state =>\r\n    state.status.mode === MODE_MAPPING.NORMAL\r\n      ? state.data.singleHighlight\r\n      : -1\r\n  )\r\n\r\n  const buildData = data => data.reduce((acc, cur) => {\r\n    let fnRank = cur.resolutions[dateType].fnRank;\r\n    let maxRank = cur.resolutions[dateType].maxRank;\r\n    let sigRank = cur.resolutions[dateType].sigRank;\r\n    let x = Math.sqrt(maxRank * maxRank + fnRank * fnRank + sigRank * sigRank);\r\n    let y = cur.rank;\r\n    acc.x.push(x)\r\n    acc.y.push(y)\r\n    return acc\r\n  }, { x: [], y: [] })\r\n\r\n  let nycRank = buildData(nycScatterData)\r\n  let sfRank = buildData(sfScatterData)\r\n  let singleHighlightPoint = [\r\n    ...nycScatterData.filter(d => d.key === highLightPointKey),\r\n    ...sfScatterData.filter(d => d.key === highLightPointKey),\r\n  ]\r\n  let singleHightlightCoordinate = buildData(singleHighlightPoint)\r\n\r\n  const data = [{\r\n    ...nycRank,\r\n    name: \"nyc\",\r\n    type: 'scatter',\r\n    mode: 'markers',\r\n    opacity: 0.6,\r\n    marker: { color: 'red' },\r\n  }, {\r\n    ...sfRank,\r\n    name: \"sf\",\r\n    type: 'scatter',\r\n    mode: 'markers',\r\n    opacity: 0.6,\r\n    marker: { color: 'blue' },\r\n  }, {\r\n    ...singleHightlightCoordinate,\r\n    type: 'scatter',\r\n    mode: 'markers',\r\n    opacity: 1,\r\n    marker: {\r\n      size: 10,\r\n      color: highLightPointKey >= 96 ? 'blue' : 'red',\r\n      line: { width: 2 }\r\n    },\r\n  }]\r\n\r\n  const config = {\r\n    scrollZoom: true,\r\n    displayModeBar: true,\r\n    uirevision: true,\r\n    displaylogo: false,\r\n    modeBarButtonsToRemove: ['zoomIn', 'zoomOut', 'autoScale']\r\n  }\r\n\r\n  const layout = {\r\n    width: '300',\r\n    height: '250',\r\n    dragmode: 'select',\r\n    showlegend: false,\r\n    hovermode: false,\r\n    yaxis: { range: [0, 3.5] },\r\n    margin: { l: 20, r: 10, b: 40, t: 20, }\r\n  }\r\n\r\n  const onSelectedHandler = data => {\r\n    if (!data) return\r\n    if (!data.points.length) {\r\n      dispatch(setHighlight({ nycHighlight: [], sfHighlight: [] }))\r\n    }\r\n    let nycHighlight = []\r\n    let sfHighlight = []\r\n    let lastIndex = data.points.length - 1\r\n\r\n    if (data.points[0].data.name === 'nyc') {\r\n      nycHighlight = data.points[0].data.selectedpoints\r\n      if (data.points[lastIndex].data.name === 'sf') {\r\n        sfHighlight = data.points[lastIndex].data.selectedpoints\r\n      }\r\n    } else {\r\n      sfHighlight = data.points[0].data.selectedpoints\r\n      if (data.points[lastIndex].data.name === 'nyc') {\r\n        nycHighlight = data.points[lastIndex].data.selectedpoints\r\n      }\r\n    }\r\n    dispatch(setHighlight({ nycHighlight, sfHighlight }))\r\n    dispatch(setMode(MODE_MAPPING.SELECT))\r\n  }\r\n\r\n  const onDeselectHandler = () => {\r\n    dispatch(setMode(MODE_MAPPING.NORMAL))\r\n  }\r\n  return (\r\n    mode != MODE_MAPPING.LOCATION &&\r\n    <React.Fragment>\r\n      <div style={{ textAlign: 'center' }}>Rank</div>\r\n      <Plot\r\n        data={data}\r\n        layout={{\r\n          ...layout,\r\n          xaxis: {\r\n            ...AXES_BY_MODE_MAPPING[dateType].scatterChart\r\n          }\r\n        }}\r\n        config={config}\r\n        onSelected={data => onSelectedHandler(data)}\r\n        onDeselect={() => onDeselectHandler()}\r\n      />\r\n    </React.Fragment>\r\n\r\n  );\r\n}\r\n\r\nexport default Scatterplot","import React, { useState, useEffect } from 'react'\r\nimport Plot from 'react-plotly.js'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setSingleHighlight } from '../store/dataSlicer'\r\nimport { MODE_MAPPING, AXES_BY_MODE_MAPPING, COLOR_PULSE_MAPPING, DATE_MAPPING } from './constant'\r\n\r\nconst lineFigure = {\r\n  config: {\r\n    uirevision: true,\r\n    staticPlot: true,\r\n    displayModeBar: false,\r\n  },\r\n  layout: {\r\n    margin: { l: 40, r: 40, b: 10, t: 10 },\r\n    xaxis: {\r\n      showgrid: false,\r\n      showticklabels: false,\r\n      zeroline: false,\r\n    }\r\n  }\r\n}\r\nconst circleFigure = {\r\n  config: {\r\n    uirevision: true,\r\n    staticPlot: true,\r\n    displayModeBar: false,\r\n  },\r\n  layout: {\r\n    margin: { l: 0, r: 0, b: 0, t: 0 },\r\n    xaxis: {\r\n      showgrid: false,\r\n      showticklabels: false,\r\n      zeroline: false,\r\n      fixedrange: true,\r\n    },\r\n    yaxis: {\r\n      showgrid: false,\r\n      showticklabels: false,\r\n      zeroline: false,\r\n      fixedrange: true,\r\n    }\r\n  }\r\n}\r\n\r\nconst getBeatTypes = (d, dateType) => {\r\n  var beats = [];\r\n  var maxTime = d.resolutions[dateType][\"maxTime\"];\r\n  var sigMaxTime = d.resolutions[dateType][\"sigMaxTime\"];\r\n  for (var i = 0; i < maxTime.length; i++) {\r\n    var b = (maxTime[i] ? (sigMaxTime[i] ? 2 : 1) : 0);\r\n    beats.push(b);\r\n  }\r\n  return beats;\r\n}\r\n\r\nconst PulseChart = ({ nycScatterData, sfScatterData }) => {\r\n  const dispatch = useDispatch()\r\n  const mode = useSelector(state => state.status.mode)\r\n  const dateType = useSelector(state => state.status.type)\r\n  const nycHighlight = useSelector(state => state.data.nycHighlight)\r\n  const sfHighlight = useSelector(state => state.data.sfHighlight)\r\n  const [rankIndex, setRankIndex] = useState([])\r\n  var data = []\r\n\r\n  useEffect(() => {\r\n    setRankIndex([])\r\n  }, [dateType])\r\n\r\n  if (mode != MODE_MAPPING.NORMAL) {\r\n    nycScatterData = nycHighlight.map(d => nycScatterData[d])\r\n    sfScatterData = sfHighlight.map(d => sfScatterData[d])\r\n  }\r\n  data = [...nycScatterData, ...sfScatterData]\r\n  data.sort((a, b) => b.rank - a.rank)\r\n  if (rankIndex.length != 0) {\r\n    data = data.filter(d => {\r\n      let flag = true\r\n      rankIndex.forEach(i => {\r\n        if (!d.resolutions[dateType][\"maxTime\"][i] ||\r\n          !d.resolutions[dateType][\"sigMaxTime\"][i]) {\r\n          flag = false\r\n          return null;\r\n        }\r\n      })\r\n      if (flag) return true\r\n      else return false\r\n    })\r\n  }\r\n\r\n  const createChart = (d, i) => {\r\n    return (\r\n      <div key={i}\r\n        onMouseEnter={() => dispatch(setSingleHighlight(d.key))}\r\n        onMouseLeave={() => dispatch(setSingleHighlight(-1))}\r\n      >\r\n        <Plot\r\n          data={[{\r\n            y: d.resolutions[dateType].scalars,\r\n            mode: 'lines',\r\n            line: {\r\n              color: d.location === 'nyc' ? \"red\" : \"blue\"\r\n            }\r\n          }]}\r\n          config={lineFigure.config}\r\n          layout={{\r\n            ...lineFigure.layout,\r\n            yaxis: {\r\n              ...AXES_BY_MODE_MAPPING[dateType].pulseChart\r\n            }\r\n          }}\r\n          useResizeHandler={true}\r\n          style={{ width: \"100%\", height: \"80px\" }}\r\n        />\r\n        <Plot\r\n          data={[{\r\n            y: Array(d.resolutions[dateType].scalars.length).fill(1),\r\n            mode: 'markers',\r\n            type: 'scatter',\r\n            marker: {\r\n              size: 12,\r\n              color: getBeatTypes(d, dateType).map(d => COLOR_PULSE_MAPPING[d]),\r\n              line: { width: 1 }\r\n            }\r\n          }]}\r\n          config={circleFigure.config}\r\n          layout={circleFigure.layout}\r\n          useResizeHandler={true}\r\n          style={{ width: \"100%\", height: \"20px\" }}\r\n        />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  const handleClick = data => {\r\n    if (rankIndex.includes(data.points[0].x)) {\r\n      setRankIndex(rankIndex.filter(d => d != data.points[0].x))\r\n    } else {\r\n      setRankIndex([...rankIndex, data.points[0].x])\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className='pulsechart_bar'>\r\n        <Plot\r\n          data={[{\r\n            y: Array(DATE_MAPPING[dateType].length).fill(1),\r\n            customdata: DATE_MAPPING[dateType],\r\n            mode: 'markers',\r\n            type: 'scatter',\r\n            hovertemplate: '%{customdata}<extra></extra>',\r\n            marker: {\r\n              size: 12,\r\n              color: Array(DATE_MAPPING[dateType].length).fill(0).map((_, i) => {\r\n                return rankIndex.includes(i) ? COLOR_PULSE_MAPPING[2] : COLOR_PULSE_MAPPING[0]\r\n              }),\r\n              line: { width: 1 }\r\n            }\r\n          }]}\r\n          config={{ ...circleFigure.config, staticPlot: false }}\r\n          layout={{ ...circleFigure.layout, margin: { l: 0, r: 18, b: 0, t: 0 } }}\r\n          useResizeHandler={true}\r\n          style={{ width: \"100%\", height: \"30px\" }}\r\n          onClick={d => handleClick(d)}\r\n        />\r\n      </div>\r\n      <div className='pulsechart_content'>\r\n        {\r\n          data.map((d, i) => {\r\n            return createChart(d, i)\r\n          })\r\n        }\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default PulseChart","import React, { useEffect, useState } from 'react'\r\nimport Plot from 'react-plotly.js';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AXES_BY_MODE_MAPPING, MODE_MAPPING } from './constant';\r\nimport { setSingleHighlight } from '../store/dataSlicer'\r\n\r\nconst getDistance = (feature1, feature2, dateType) => {\r\n  let distance = 0;\r\n  let beat1 = feature1.resolutions[dateType].maxTime;\r\n  let beat2 = feature2.resolutions[dateType].maxTime;\r\n  let dd = 0;\r\n  for (let i = 0; i < beat1.length; i++) {\r\n    dd += ((beat1[i] - beat2[i]) * (beat1[i] - beat2[i]));\r\n  }\r\n  distance += dd;\r\n  let sbeat1 = feature1.resolutions[dateType].sigMaxTime;\r\n  let sbeat2 = feature2.resolutions[dateType].sigMaxTime;\r\n  dd = 0;\r\n  for (let i = 0; i < sbeat1.length; i++) {\r\n    dd += ((sbeat1[i] - sbeat2[i]) * (sbeat1[i] - sbeat2[i]));\r\n  }\r\n  distance += dd;\r\n  let fbeat1 = feature1.resolutions[dateType].fn;\r\n  let fbeat2 = feature2.resolutions[dateType].fn;\r\n  dd = 0;\r\n  for (let i = 0; i < fbeat1.length; i++) {\r\n    dd += ((fbeat1[i] - fbeat2[i]) * (fbeat1[i] - fbeat2[i]));\r\n  }\r\n  distance += dd;\r\n  return Math.sqrt(distance);\r\n}\r\n\r\nconst config = {\r\n  scrollZoom: true,\r\n  hoverinfo: 'none',\r\n  displayModeBar: false,\r\n  uirevision: true,\r\n}\r\n\r\nconst layout = {\r\n  margin: { l: 20, r: 0, b: 40, t: 0 },\r\n  showlegend: false,\r\n  hovermode:'closest',\r\n  yaxis: {\r\n    showgrid: false,\r\n    showticklabels: false,\r\n    zeroline: false,\r\n    fixedrange: true,\r\n  }\r\n}\r\n\r\nconst DistanceChart = ({ nycScatterData, sfScatterData }) => {\r\n  const dispatch = useDispatch()\r\n  const singleHighlight = useSelector(state => state.data.singleHighlight)\r\n  const highlightIndex = useSelector(state => state.data.singleHighlight < nycScatterData.length\r\n    ? state.data.nycHighlight\r\n    : state.data.sfHighlight)\r\n  const mode = useSelector(state => state.status.mode)\r\n  const dateType = useSelector(state => state.status.type)\r\n  const [highlight, setHighlight] = useState(96)\r\n  const [hover, setHover] = useState(false)\r\n  var distanceList = []\r\n  var keyValueList = []\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    if (singleHighlight != -1 && !hover) setHighlight(singleHighlight)\r\n  }, [singleHighlight])\r\n\r\n  if (highlight < nycScatterData.length) {\r\n    var location = 'nyc'\r\n    var sourceData = sfScatterData\r\n    var sourcePoint = nycScatterData.filter(d => d.key === highlight)[0]\r\n  } else {\r\n    var location = 'sf'\r\n    var sourceData = nycScatterData\r\n    var sourcePoint = sfScatterData.filter(d => d.key === highlight)[0]\r\n  }\r\n  if (mode != MODE_MAPPING.NORMAL) {\r\n    sourceData = highlightIndex.map(d => sourceData[d])\r\n  }\r\n\r\n  sourceData.forEach(d => {\r\n    distanceList.push(getDistance(sourcePoint, d, dateType))\r\n    keyValueList.push(d.key)\r\n  })\r\n\r\n  const handleHover = data => {\r\n    if(data.points[0].curveNumber === 0 ) return;\r\n    setHover(true)\r\n    let t = data.points[0].data.x.indexOf(data.points[0].x)\r\n    dispatch(setSingleHighlight(data.points[0].data.key[t]))\r\n  }\r\n\r\n  const handleUnhover = data => {\r\n    if(data.points[0].curveNumber === 0 ) return;\r\n    dispatch(setSingleHighlight(-1))\r\n    setHover(false)\r\n  }\r\n\r\n  const data = [{\r\n    x: [0],\r\n    y: [1],\r\n    type: 'scatter',\r\n    mode: 'markers',\r\n    opacity: 0.8,\r\n    hoverinfo: 'none',\r\n    marker: { color: location === 'nyc' ? 'red' : 'blue' },\r\n  }, {\r\n    x: distanceList,\r\n    y: Array(distanceList.length).fill(1),\r\n    key: keyValueList,\r\n    type: 'scatter',\r\n    mode: 'markers',\r\n    opacity: 0.8,\r\n    hoverinfo: 'none',\r\n    marker: { color: location === 'nyc' ? 'blue' : 'red' },\r\n  }]\r\n\r\n  return (\r\n    mode != MODE_MAPPING.LOCATION &&\r\n    <React.Fragment>\r\n      <div style={{ textAlign: 'center' }}>Distance</div>\r\n      <Plot\r\n        data={data}\r\n        config={config}\r\n        layout={{\r\n          ...layout,\r\n          xaxis: {\r\n            zeroline: false,\r\n            ...AXES_BY_MODE_MAPPING[dateType].distanceChart\r\n          }\r\n        }}\r\n        useResizeHandler={true}\r\n        style={{ width: \"100%\", height: \"125px\" }}\r\n        onHover={data => handleHover(data)}\r\n        onUnhover={data => handleUnhover(data)}\r\n      />\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default DistanceChart","import React, { useState } from 'react'\r\nimport { Button, Modal, Typography } from '@mui/material'\r\nimport { Box } from '@mui/system'\r\nimport { useDispatch } from 'react-redux'\r\nimport { setMode } from '../store/statusSlicer'\r\nimport { MODE_MAPPING, LOCATION_KEY_MAPPING } from './constant'\r\nimport { setHighlight } from '../store/dataSlicer'\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Locations = ({ nycScatterLength, sfScatterLength }) => {\r\n  const dispatch = useDispatch()\r\n  const [location, setLocation] = useState('All')\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleLocationChange = newLocation => {\r\n    if (newLocation === 'All') {\r\n      setLocation('All')\r\n      dispatch(setMode(MODE_MAPPING.NORMAL))\r\n    } else {\r\n      setLocation(newLocation.name)\r\n      dispatch(setMode(MODE_MAPPING.LOCATION))\r\n      if (newLocation.city === 'nyc') {\r\n        dispatch(setHighlight({\r\n          nycHighlight: newLocation.key,\r\n          sfHighlight: []\r\n        }))\r\n      } else {\r\n        dispatch(setHighlight({\r\n          nycHighlight: [],\r\n          sfHighlight: newLocation.key\r\n        }))\r\n      }\r\n    }\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        sx={{ height: '125px', width: '100%', fontSize: 40, color: 'black' }}\r\n      > {location}\r\n      </Button>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <Box sx={style}>\r\n          <Typography component=\"h1\" sx={{ textAlign: 'center' }}>Choose Dataset</Typography>\r\n          <Button variant=\"outlined\"\r\n            onClick={() => handleLocationChange('All')}\r\n          > All\r\n          </Button>\r\n          <Typography component=\"h2\">New York City:</Typography>\r\n          <Button variant=\"outlined\"\r\n            onClick={() => handleLocationChange(LOCATION_KEY_MAPPING['Rockefeller Center'])}\r\n          > Rockefeller Center\r\n          </Button>&nbsp;\r\n          <Button variant=\"outlined\"\r\n            onClick={() => handleLocationChange(LOCATION_KEY_MAPPING['Greenwich Village'])}\r\n          > Greenwich Village\r\n          </Button>\r\n          <Typography component=\"h2\">San Francisco:</Typography>\r\n          <Button variant=\"outlined\"\r\n            onClick={() => handleLocationChange(LOCATION_KEY_MAPPING['Alcatraz Island'])}\r\n          > Alcatraz Island\r\n          </Button>&nbsp;\r\n          <Button variant=\"outlined\"\r\n            onClick={() => handleLocationChange(LOCATION_KEY_MAPPING['Western Addition'])}\r\n          > Western Addition\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default Locations","import React, { useEffect, useState } from 'react'\nimport * as d3 from 'd3-fetch'\nimport './App.css'\n\nimport nycCSV from './data/flickr_nyc.csv'\nimport sfCSV from './data/flickr_sf.csv'\nimport feature_nyc from './data/feature_nyc.json'\nimport feature_sf from './data/feature_sf.json'\nimport Map from './components/Map'\nimport Banner from './components/Banner'\nimport Scatterplot from './components/Scatterplot';\nimport PulseChart from './components/PulseChart';\nimport DistanceChart from './components/DistanceChart'\nimport Locations from './components/Locations'\n\nvar nycScatterData = []\nvar sfScatterData = []\nvar nycScalarData = []\nvar sfScalarData = []\n\nfunction App() {\n  const [isCSVLoading, setIsCSVLoading] = useState(true)\n  useEffect(() => {\n    nycScatterData = feature_nyc.features.map((d, i) => ({\n      ...d,\n      latLng: [d.latLng[0][1], d.latLng[0][0]],\n      location: 'nyc',\n      key: i\n    }))\n    sfScatterData = feature_sf.features.map((d, i) => ({\n      ...d,\n      latLng: [d.latLng[0][1], d.latLng[0][0]],\n      location: 'sf',\n      key: i + feature_nyc.features.length\n    }))\n    Promise.all([\n      d3.csv(nycCSV, d => [+d.Longtitude, +d.Latitude, +d.Time]),\n      d3.csv(sfCSV, d => [+d.Longtitude, +d.Latitude, +d.Time])\n    ]).then(files => {\n      nycScalarData = files[0]\n      sfScalarData = files[1]\n      setIsCSVLoading(false)\n    })\n  }, [])\n\n  return (\n    !isCSVLoading &&\n    <div className=\"App\">\n      <div className='banner_container'>\n        <Banner />\n      </div>\n      <div className='map_container map_container_1'>\n        <Map location='nyc' scalarData={nycScalarData} scatterData={nycScatterData} />\n      </div>\n      <div className='map_container map_container_2'>\n        <Map location='sf' scalarData={sfScalarData} scatterData={sfScatterData} />\n      </div>\n      <div className='scatter_container'>\n        <Scatterplot nycScatterData={nycScatterData} sfScatterData={sfScatterData} />\n      </div>\n      <div className=\"button_container\">\n        <Locations nycScatterLength={nycScatterData.length} sfScatterLength={sfScatterData.length} />\n      </div>\n      <div className='distance_container'>\n        <DistanceChart nycScatterData={nycScatterData} sfScatterData={sfScatterData} />\n      </div>\n      <div className=\"pulsechart_container\">\n        <PulseChart nycScatterData={nycScatterData} sfScatterData={sfScatterData} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport dataSlicer from \"./dataSlicer\";\r\nimport statusSlice from \"./statusSlicer\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    data: dataSlicer,\r\n    status: statusSlice,\r\n  },\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: \"#ff8f00\"\n    },\n    secondary: {\n      main: \"#7e57c2\",\n    },\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}